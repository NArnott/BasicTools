@page "/guids"
@attribute [PageMetadata(
Title = "GUID Generation",
Description = "Generate GUID/UUID values. This tool is an easy to use, online tool to create guids for all sorts of situations. Includes templating support.",
Keywords = "guid, guidgen, uuid, guid generator, uuid generator, web based, online guid, onlineguid, globally unique identifier, universal unique identifier, java guid, java uuid, C# guid, C# uuid, globally unique identifier, unique identifier, tool, free"
)]
@attribute [ToolPage("GUID Generation", "Generate GUID/UUID values and output to various format using templates.", "Icons.Material.Outlined.ChangeCircle")]

<MudText Typo="Typo.h3">GUID / UUID Generation</MudText>

<LayoutSetter>
    <RightSidebar>
        <MudText Typo="Typo.h5">Overview</MudText>
        <MudText>Generate one or many GUID values, using templates to format the output. The template can be as simple as <code>{0}</code> to produce an unformated guid, to as complicated as a complete language statement (<code>var guid{1} = Guid.Parse("{0}");</code>).</MudText>
        <ul>
            <li><code>{0}</code> represents the generated guid value itself</li>
            <li><code>{1}</code> represents the current count of the guid being generated.</li>
        </ul>

        <MudText Typo="Typo.h5">What is a GUID?</MudText>
        <MudText>
            A GUID is an acronyom that stands for Globally Unique Identifier, they are also referred to as UUIDs or Universaly Unique Identifiers - there is no real difference between the two. Technically they are 128-bit unique reference numbers used in computing which are highly unlikely to repeat when generated despite there being no central GUID authority to ensure uniqueness.
            <MudLink Href="http://guid.one/guid" Target="WhatsAGuid" Typo="Typo.subtitle2" Class="ms-auto"><small>(Full Reference)</small></MudLink>
        </MudText>

        <MudText Typo="Typo.h6">Generation Mode:</MudText>
        <MudText><strong>Default</strong><br />Creates GUIDs using the <MudLink Href="https://docs.microsoft.com/en-us/dotnet/api/system.guid.newguid" Target="msRef">default .NET implementation</MudLink> for creating GUIDs (<code>Guid.NewGuid()</code>)</MudText>
        <MudText><strong>Cryptographic</strong><br />Creates GUIDs using the <MudLink Href="https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.randomnumbergenerator.getbytes" Target="msRef">.NET's Random Number Generator</MudLink> to obtain 16 random bytes and <MudLink Href="https://docs.microsoft.com/en-us/dotnet/api/system.guid.-ctor#System_Guid__ctor_System_Byte___" Target="msRef">constructing a GUID</MudLink> from it.</MudText>
    </RightSidebar>
</LayoutSetter>

<MudGrid>
    <MudItem lg="6">
        <MudPaper>
            <MudForm @ref="_form" @bind-IsValid="_formIsValid" Class="pa-3" @onkeydown="OnFormKeyDown">
                <MudText Typo="Typo.caption" Class="pb-0">Generation Mode*</MudText>
                <div class="d-flex">
                    <MudRadioGroup Required="true" RequiredError="Generation Mode is required" @bind-SelectedOption="GenerationMode">
                        <MudRadio Option="@GenerationModes.Default">@GenerationModes.Default.ToString()</MudRadio>
                        <MudRadio Option="@GenerationModes.Cryptographic">@GenerationModes.Cryptographic.ToString()</MudRadio>
                    </MudRadioGroup>
                </div>
                
                <div class="d-flex">
                    <MudNumericField AutoFocus="true" Label="Number of GUIDs to create" @bind-Value="CreateGuidCount" Immediate="true" Min="1" Max="250" Required="true" />
                    <MudButton Class="ms-3 align-self-end" Color="Color.Primary" Variant="Variant.Outlined" Disabled="!_formIsValid" OnClick="CreateGuids">Create Guid(s)</MudButton>
                </div>

                <MudTextField Class="mt-6 code" Label="Output Template" Variant="Variant.Outlined" @bind-Value="Template" Lines="3" Required="true" ErrorText="Invalid Template" Validation="new Func<string, bool>(IsTemplateValid)" />

                @if (Sample.IsValid)
                {
                <MudText>Sample Output: <span class="code">@Sample</span></MudText>
                }

                <MudButton Color="Color.Tertiary" Variant="Variant.Outlined" OnClick="ShowTemplatesDialog">Template Examples</MudButton>
            </MudForm>
        </MudPaper>
    </MudItem>
    <MudItem lg="6">
        @if (_guids != null)
        {
            @if (_guids.Length > 1)
            {
                <MudButton StartIcon="@Icons.Outlined.ContentCopy" Color="Color.Secondary" Variant="Variant.Filled" Class="mb-2" @onclick="CopyAllGuids">Copy All</MudButton>
            }

            <MudPaper>
                <MudList Clickable="true">
                    @foreach (var guid in _guids)
                    {
                        <MudListItem Class="@((guid.IsActive ? "active" : "") + (guid.WasActive ? "was-active" : ""))" OnClick="async () => await SelectGuid(guid)"><code>@guid</code></MudListItem>
                    }
                </MudList>
            </MudPaper>
        }
    </MudItem>
</MudGrid>

<MudDialog @ref="_templatesDialog">
    <DialogContent>
        <MudGrid Style="overflow-y: scroll; max-height: 75vh">
            @foreach (var exTemp in _exampleTemplates)
            {
                <MudItem md="6" Style="width: 100%">
                    <MudCard Elevation="2">
                        <MudCardHeader>
                            <CardHeaderAvatar>
                                <MudIcon Icon="@Icons.TwoTone.Help" Size="Size.Large" />
                            </CardHeaderAvatar>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">@exTemp.Name</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudText><code>@exTemp.Template</code></MudText>
                            <MudText><small>Sample: <span class="code">@exTemp.Sample</span></small></MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Class="ms-auto" Variant="Variant.Filled" Color="Color.Primary" OnClick="() => { exTemp.Select(); _templatesDialog.Close(); }">Select Template</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="() => _templatesDialog.Close()" Class="px-10">Close</MudButton>
    </DialogActions>
</MudDialog>


@code {
    bool _formIsValid;
    MudForm _form;

    MudDialog _templatesDialog;

    private void ShowTemplatesDialog()
    {
        _templatesDialog.Show("Template Examples", options: new DialogOptions()
        {
            FullWidth = true,
            MaxWidth = MaxWidth.Medium,
            CloseButton = true
        });
    }

    private void OnFormKeyDown(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            _form.Validate();

            if (_form.IsValid)
                CreateGuids();
        }
    }
}