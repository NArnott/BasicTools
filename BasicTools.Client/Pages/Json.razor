@page "/json"
@attribute [PageMetadata(
Title = "Json Validation and Formatting",
Description = "Parse, Validate and Format Json documents",
Keywords = "JSON, javascript object notation, parser, format, online, tool, free"
)]
@attribute [ToolPage("Json Processing", "Parse, Validate and Format Json documents.", "grading")]

<h1>Json Processing</h1>

<LayoutSetter>
    <RightSidebar>
        <h3>Instructions</h3>
        <p>Paste a JSON document into the Input field and click the Process button.</p>
        <p>If the JSON document is <strong>valid</strong>, a fully formatted json document will appear in the Output.</p>
        <p>If the JSON document is <strong>not valid</strong>, the parsing error will be displayed.</p>
    </RightSidebar>
</LayoutSetter>

<div class="row" style="height: calc(100% - 4rem)">
    <div class="col-xl-5">
        <span class="d-flex"><span class="h3 me-auto">Input</span><small class="align-self-end">Size: @Input.Length</small></span>
        <textarea @bind="Input" class="form-control code disable-wrap" spellcheck="false"  />
    </div>
    <div class="col-xl-2">
        <div class="mt-xl-5">Output To:</div>
        @foreach (Enum value in Enum.GetValues(typeof(JsonOutputModes)))
        {
            <div class="form-check">
                <input class="form-check-input" type="radio" value="@value" name="outputMode" id="output_mode_@value" checked="@OutputMode.Equals(value)" @onchange="OnOutputModeChanged">
                <label class="form-check-label" for="output_mode_@value">
                    @value.GetDescription()
                </label>
            </div>
        }

        <button class="btn btn-primary mt-3" style="width:100%;" @onclick="Process">Process</button>
    </div>
    <div class="col-xl-5">
        <span class="d-flex">
            <span class="h3 me-2">Output</span>
            @if (Output != null && !OutputIsError)
            {
                <button Class="btn btn-sm btn-outline-secondary me-auto" style="padding: .05rem; margin: .20rem; border: none" title="Copy Output" @onclick="CopyOutput"><Icon Name="content_copy" /></button>
                <small class="align-self-end">Size: @Output.Length</small>
            }
        </span>
        <textarea @bind="Output" class="form-control code @(OutputIsError ? "is-invalid" : "") @(WrapOutput ? "" : "disable-wrap")" readonly />
    </div>
</div>

@code {
    private void OnOutputModeChanged(ChangeEventArgs args)
    {
        OutputMode = (JsonOutputModes)Enum.Parse(typeof(JsonOutputModes), (string)args.Value);
    }
}
