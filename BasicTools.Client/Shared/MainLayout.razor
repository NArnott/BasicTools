@inherits LayoutComponentBase
@implements IDisposable


<CascadingValue Value="this">

    <div class="d-flex flex-row" style="height: calc(100vh - 3.5rem)">
        <div class="h-100">
            <NavMenu />
        </div>

        <main class="container-fluid flex-fill pb-3" style="overflow-y:auto;">
            @Body
        </main>

        @if (_rightSidebar != null)
        {
            <div style="width:450px; overflow-y:auto;" class="p-3 text-white bg-dark">
                @_rightSidebar
            </div>
        }
    </div>

    <footer class="footer mt-auto py-3 bg-light">
        <div class="container-fluid">
            <span class="text-muted">This site is an <a href="https://github.com/NArnott/BasicTools" target="gitRepo">open source project</a> hosted on GitHub. Contributions are welcome!</span>
        </div>
    </footer>
</CascadingValue>

<ToastContainer Defaults="ToastDefault">
    <IconTemplate>
        <Icon Name="@context.ToString()" />
    </IconTemplate>
</ToastContainer>

@code {
    private RenderFragment _rightSidebar;

    private bool _disposed = false;

    private ToastDefaults ToastDefault = new ToastDefaults()
    {
        HideOnNavigation = true,
        AutoHideDelay = TimeSpan.FromSeconds(4)
    };

    public void SetRenderFragments(RenderFragment rightSidebar)
    {
        if (_disposed)
            return;

        _rightSidebar = rightSidebar;
        StateHasChanged();
    }

    public void ClearRenderFragments(RenderFragment rightSidebar)
    {
        if (_disposed)
            return;

        InvokeAsync(() =>
        {
            if (_rightSidebar == rightSidebar)
            {
                _rightSidebar = null;
                StateHasChanged();
            }
        });
    }

    public void Dispose()
    {
        _disposed = true;
    }
}
